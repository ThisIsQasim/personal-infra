---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mealie
  labels:
    app: mealie
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mealie
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mealie
    spec:
      containers:
      - image: ghcr.io/mealie-recipes/mealie:v3.1.2
        imagePullPolicy: IfNotPresent
        name: mealie
        envFrom:
        - secretRef:
            name: mealie
        env:
        - name: LC_ALL
          value: en_GB.UTF-8
        - name: LANG
          value: en_GB.UTF-8
        - name: ALLOW_SIGNUP
          value: "False"
        - name: PUID
          value: "1001"
        - name: PGID
          value: "1001"
        - name: TZ
          value: "Asia/Karachi"
        - name: BASE_URL
          value: https://mealie.home.com
        - name: OIDC_AUTH_ENABLED
          value: "True"
        - name: OIDC_SIGNUP_ENABLED
          value: "True"
        - name: OIDC_CONFIGURATION_URL
          value: "https://authentik.home.com/application/o/mealie/.well-known/openid-configuration"
        - name: OIDC_ADMIN_GROUP
          value: "Mealie Admins"
        - name: OIDC_AUTO_REDIRECT
          value: "True"
        - name: OIDC_PROVIDER_NAME
          value: "Login with SSO"
        volumeMounts:
        - mountPath: /app/data/
          name: data
        ports:
        - name: http
          containerPort: 9000
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 30
          periodSeconds: 5
        readinessProbe:
          tcpSocket:
            port: http
        resources:
          requests:
            cpu: "100m"
          limits:
            memory: "512Mi"
      volumes:
        - name: data
          hostPath:
            path: /home/utilities/mealie/data
            type: DirectoryOrCreate
      nodeSelector:
        kubernetes.io/hostname: node1
---
apiVersion: v1
kind: Service
metadata:
  name: mealie
  labels:
    app: mealie
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: mealie
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mealie
  labels:
    app: mealie
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    gethomepage.dev/description: Recipes
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: Utilities
    gethomepage.dev/icon: mealie.png
    gethomepage.dev/name: mealie
    gethomepage.dev/pod-selector: app=mealie
    gethomepage.dev/weight: "30"
spec:
  tls:
  - hosts:
    - mealie.home.com
  rules:
  - host: mealie.home.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mealie
            port:
              number: 80
