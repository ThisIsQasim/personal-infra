global:
  env:
  - name: AUTHENTIK_SECRET_KEY
    valueFrom:
      secretKeyRef:
        name: authentik-key
        key: secretkey

authentik:
  postgresql:
    host: file:///postgres-creds/host
    port: 5432
    name: file:///postgres-creds/dbname
    user: file:///postgres-creds/username
    password: file:///postgres-creds/password
  error_reporting:
    enabled: true
server:
  ingress:
    enabled: true
    annotations:
      gethomepage.dev/description: Authentication
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Utilities
      gethomepage.dev/icon: authentik.png
      gethomepage.dev/name: authentik
      gethomepage.dev/pod-selector: app.kubernetes.io/name=authentik
      gethomepage.dev/weight: "5"
      gethomepage.dev/widget.type: authentik
      gethomepage.dev/widget.url: http://authentik-server.authentik.svc:80
      gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_AUTHENTIK_KEY}}"
    hosts:
      - authentik.home.com
  volumes:
    - name: postgres-creds
      secret:
        secretName: authentik-pgsql-app
  volumeMounts:
    - name: postgres-creds
      mountPath: /postgres-creds
      readOnly: true
worker:
  volumes:
    - name: postgres-creds
      secret:
        secretName: authentik-pgsql-app
  volumeMounts:
    - name: postgres-creds
      mountPath: /postgres-creds
      readOnly: true

redis:
  enabled: true
  master:
    persistence:
      enabled: false
